{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://my-webpack-project/webpack/runtime/async module","webpack://my-webpack-project/./src/index.js","webpack://my-webpack-project/webpack/bootstrap","webpack://my-webpack-project/webpack/startup"],"sourcesContent":["var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = (queue) => {\n\tif(queue && queue.d < 1) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach((fn) => (fn.r--));\n\t\tqueue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));\n\t}\n}\nvar wrapDeps = (deps) => (deps.map((dep) => {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then((r) => {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, (e) => {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = (fn) => (fn(queue));\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = x => {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}));\n__webpack_require__.a = (module, body, hasAwait) => {\n\tvar queue;\n\thasAwait && ((queue = []).d = -1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise((resolve, rej) => {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](x => {}));\n\tmodule.exports = promise;\n\tbody((deps) => {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = () => (currentDeps.map((d) => {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}))\n\t\tvar promise = new Promise((resolve) => {\n\t\t\tfn = () => (resolve(getResult));\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));\n\t\t\tcurrentDeps.map((dep) => (dep[webpackQueues](fnQueue)));\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));\n\tqueue && queue.d < 0 && (queue.d = 0);\n};","\nimport \"./styles.css\";\n\nconst API_KEY=secrets.API_KEY;\n\nlet userSelection;\n\nconst requestOptions = {\n  method: \"GET\",\n  redirect: \"follow\",\n  mode: \"cors\"\n};\n\n\nfunction fetchInitialGeoLocation(){\n  // API call get location IP address based\n  // https://api.ipgeolocation.io/ipgeo?apiKey=API_KEY\n  let baseURL = \"https://api.ipgeolocation.io/ipgeo\";\n  let apiKey = `apiKey=${API_KEY}`;\n  let results;\n  let startingLocation;\n\n  try {\n    let test = Object.keys(localStorage);\n\n    if( test.includes(\"ipLocation\") ){\n      console.log(\"true 1: \");\n    } else {\n      console.log(\"false 1\");\n\n      fetch(`${baseURL}?${apiKey}`, requestOptions)\n      .then( (response) => response.json() )\n      .then( (json) => { results = json;  console.log(\"startingLocation\", results); } )\n      .then( () => startingLocation = extractIPGeoValues(results))\n      .then( () => localStorage.setItem(\"ipLocation\", JSON.stringify(startingLocation)) )\n      .then( () => fetchGeoCodingData(startingLocation))\n      .then( () => localStorage.setItem(\"savedLocation\", JSON.stringify(startingLocation)) )\n      .catch( (error) => console.error(error) );\n    }\n  } catch (error) {\n    console.log(\"error: \", error);\n  }\n}\n\n\nfunction extractIPGeoValues(results) {\n  let geocoded = results.city;\n\n  return geocoded;\n}\n\n\n\nfunction fetchGeoCodingData(userLocation) {\n  // API call to get geoCoding\n  // https://geocoding-api.open-meteo.com/v1/search?name=${encodedLocation}&count=10&language=en&format=json\n  let encodedLocation = userLocation.replace(/\\W/g, '+');\n  let baseURL = \"https://geocoding-api.open-meteo.com/v1/search\";\n  let name = `name=${encodedLocation}`;\n  let count = \"count=10\";\n  let language = \"language=en\";\n  let format = \"format=json\";\n  let results;\n  let listed;\n\n\n  try {\n    let existing = Object.keys(localStorage);\n      if (existing.includes(\"savedLocation\")) {\n        let savedLocation = JSON.parse(localStorage.getItem(\"savedLocation\"));\n\n        if( savedLocation === userLocation ){\n          console.log(\"comparing 1\", savedLocation, userLocation);\n        } else {\n          console.log(\"comparing 2\", savedLocation, userLocation);\n          localStorage.setItem(\"savedLocation\", JSON.stringify(userLocation));\n          console.log(\"newlySaved: \", JSON.parse(localStorage.getItem(\"savedLocation\")));\n\n          fetch(`${baseURL}?${name}&${count}&${language}&${format}`, requestOptions)\n          .then( (response) => response.json() )\n          .then( (json) => { results = json; console.log(\"results: \", results); } )\n          .then(() => { listed = extractGeoLocationValues(results); console.log(\"listed: \", listed);  })\n          .then( () => localStorage.setItem(\"GeoCodedList\", JSON.stringify(listed)))\n          .catch( (error) => console.error(error));\n        }\n      }\n  } catch (error) {\n    console.error(\"error\", error);\n  }\n\n}\n\nfunction extractGeoLocationValues (results) {\n  let myKeys = [\"name\", \"admin1\", \"country_code\", \"timezone\", \"latitude\", \"longitude\"];\n  let rawResults = results.results;\n  let list = [];\n\n  rawResults.forEach( element => {\n    let tempObj = {};\n\n    Object.keys(element).forEach( (k) => {\n      if( myKeys.includes(k) ) {\n        tempObj[`${k}`] = `${element[`${k}`]}`;\n      }\n    });\n    list.push(tempObj);\n  });\n\n  return list;\n}\n\n\nfunction selectGeoCodedLocation(index) {\n\n  try {\n    let condition = Object.keys(localStorage);\n      if( condition.includes(\"GeoCodedList\")) {\n        let city = JSON.parse(localStorage.getItem(\"GeoCodedList\"))[index];\n\n        localStorage.setItem(\"selectedLocation\", JSON.stringify(city));\n        console.log(\"city\", JSON.stringify(city));\n        return city;\n      }\n  } catch (error) {\n    console.log(\"error\", error);\n  }\n}\n\n\nfunction fetchCurrentWeather(userSelection){\n  // API Call get current weather conditions\n  // https://api.open-meteo.com/v1/forecast?latitude=33.647&longitude=-117.6892\n  // &current=temperature_2m,relative_humidity_2m,apparent_temperature,precipitation,weather_code,wind_speed_10m,wind_direction_10m\n  // &daily=weather_code,temperature_2m_max,temperature_2m_min,sunrise,sunset,uv_index_max,precipitation_probability_max,wind_speed_10m_max,wind_direction_10m_dominant\n  // &temperature_unit=fahrenheit\n  // &wind_speed_unit=mph\n  // &precipitation_unit=inch\n  // &timezone=America%2FLos_Angeles\n  // &forecast_days=4\n  let baseURL = \"https://api.open-meteo.com/v1/forecast\";\n  let latitude = `latitude=${userSelection.latitude}`;\n  let longitude = `longitude=${userSelection.longitude}`;\n  let current = 'current=temperature_2m,relative_humidity_2m,apparent_temperature,precipitation,weather_code,wind_speed_10m,wind_direction_10m';\n  let daily = 'daily=weather_code,temperature_2m_max,temperature_2m_min,sunrise,sunset,uv_index_max,precipitation_probability_max,wind_speed_10m_max,wind_direction_10m_dominant';\n  let temperature = 'temperature_unit=fahrenheit';\n  let precipitation = 'precipitation_unit=inch';\n  let wind = 'wind_speed_unit=mph';\n  let units = `${temperature}&${precipitation}&${wind}`;\n  let timezone = 'timezone=America%2FLos_Angeles';\n  let forecast = 'forecast_days=4';\n  let now;\n\n  fetch(`${baseURL}?${latitude}&${longitude}&${current}&${daily}&${units}&${timezone}&${forecast}`, requestOptions)\n    .then(response => response.json())\n    .then( (json) => { now = json; console.log(\"conditions now: \", now); })\n    .catch(error => console.log(\"error\", error));\n}\n\n\n\n// Function Calls testing\nfetchInitialGeoLocation();\n\n// simulating switching locations entering city names or postal codes\nfetchGeoCodingData(\"Lake Forest\");\n// fetchGeoCodingData(\"94115\");\n// fetchGeoCodingData(\"Lima\");\n\n// simulating user selection from returned list of cities\nuserSelection = await selectGeoCodedLocation(0);\n\nfetchCurrentWeather(userSelection);\n\nconsole.log(\"mySelection: \", userSelection);\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(497);\n"],"names":["webpackQueues","webpackExports","webpackError","resolveQueue","API_KEY","secrets","userSelection","requestOptions","method","redirect","mode","fetchInitialGeoLocation","results","startingLocation","apiKey","Object","keys","localStorage","includes","console","log","fetch","then","response","json","extractIPGeoValues","setItem","JSON","stringify","fetchGeoCodingData","catch","error","city","userLocation","listed","name","replace","savedLocation","parse","getItem","extractGeoLocationValues","myKeys","rawResults","list","forEach","element","tempObj","k","push","selectGeoCodedLocation","index","fetchCurrentWeather","now","latitude","longitude","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","Symbol","queue","d","fn","r","a","body","hasAwait","currentDeps","outerResolve","reject","depQueues","Set","promise","Promise","resolve","rej","x","deps","map","dep","obj","e","ret","wrapDeps","getResult","fnQueue","q","has","add","err"],"sourceRoot":""}